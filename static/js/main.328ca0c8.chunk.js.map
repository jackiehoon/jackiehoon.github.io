{"version":3,"sources":["components/VendingMachine.jsx","App.js","reportWebVitals.js","index.js"],"names":["VendingMachine","useState","nowCoin","setNowCoin","map","coin","onClick","insertCoin","id","name","price","drink","onDoubleClick","window","confirm","alert","buy","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAsCeA,G,KArCQ,WACrB,IAOA,EAA8BC,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KASA,OACE,qCACE,6DAAYD,KAlBF,CAAC,IAAK,IAAK,IAAM,KAmBpBE,KAAI,SAACC,GAAD,OACT,yBAAQC,QAAS,kBAXJ,SAACD,GAAD,OAAUF,EAAWD,EAAUG,GAWrBE,CAAWF,IAAlC,UAA0CA,EAA1C,eAEF,uBACA,wBAAQC,QAbE,kBAAMH,EAAW,IAa3B,mDACA,6BAvBc,CAChB,CAAEK,GAAI,EAAGC,KAAM,SAAKC,MAAO,KAC3B,CAAEF,GAAI,EAAGC,KAAM,eAAMC,MAAO,KAC5B,CAAEF,GAAI,EAAGC,KAAM,qBAAOC,MAAO,MAC7B,CAAEF,GAAI,EAAGC,KAAM,eAAMC,MAAO,OAoBbN,KAAI,SAACO,GAAD,OACb,qBAAIC,cAAe,kBAff,SAACF,GACX,GAAKG,OAAOC,QAAQ,qDACpB,OAAIZ,EAAUQ,EAAcK,MAAM,2DAClCZ,EAAWD,EAAUQ,GAYUM,CAAIL,EAAMD,QAAnC,UACGC,EAAMF,KACP,+DCVGQ,EAdH,WAGV,OACE,mCACE,cAAC,EAAD,OCCSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.328ca0c8.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nconst VendingMachine = () => {\r\n  const coins = [100, 500, 1000, 5000];\r\n  const drinkList = [\r\n    { id: 1, name: \"물\", price: 500 },\r\n    { id: 2, name: \"콜라\", price: 2000 },\r\n    { id: 3, name: \"사이다\", price: 2500 },\r\n    { id: 4, name: \"주스\", price: 1500 },\r\n  ];\r\n  const [nowCoin, setNowCoin] = useState(0);\r\n\r\n  const insertCoin = (coin) => setNowCoin(nowCoin + coin);\r\n  const reset = () => setNowCoin(0);\r\n  const buy = (price) => {\r\n    if (!window.confirm(\"구매하시겠습니까?\")) return;\r\n    if (nowCoin < price) return alert(\"코인이 부족합니다.\");\r\n    setNowCoin(nowCoin - price);\r\n  };\r\n  return (\r\n    <>\r\n      <h2>현재 코인: {nowCoin}</h2>\r\n      {coins.map((coin) => (\r\n        <button onClick={() => insertCoin(coin)}>{coin}원</button>\r\n      ))}\r\n      <br />\r\n      <button onClick={reset}>거스름돈 반환</button>\r\n      <ul>\r\n        {drinkList.map((drink) => (\r\n          <li onDoubleClick={() => buy(drink.price)}>\r\n            {drink.name}\r\n            <button>삭제</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VendingMachine;\r\n","import EventPractice from \"./components/EventPractice\";\nimport Counter from \"./components/Counter\";\nimport Say from \"./components/Say\";\nimport IterationSample from \"./components/IterationSample\";\nimport VendingMachine from \"./components/VendingMachine\";\n\nconst App = () => {\n  // const name = \"react\";\n  // const name2 = \"react2\";\n  return (\n    <>\n      <VendingMachine />\n      {/* <Say />\n      <Counter /> */}\n      {/* <MyComponent name={name} name2={name2}></MyComponent>\n      <MyComponent name={name} name2={name2} /> */}\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}